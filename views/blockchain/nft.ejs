<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Create NFT</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://unpkg.com/@solana/web3.js@latest/lib/index.iife.min.js"></script>

    <style>
         /* Sidebar styles */

         .sidebar {
            height: 100%;
            width: 250px;
            position: fixed;
            top: 0;
            left: 0;
            background-color: #f8f9fa;
            padding-top: 3rem;
            overflow-y: auto;
            z-index: 1;
        }

        .sidebar-nav-link {
            padding: 10px;
            color: #000;
            text-decoration: none;
            display: block;
        }

        .sidebar-nav-link:hover {
            background-color: #e9ecef;
        }

        .sidebar-brand {
            padding: 20px;
            font-weight: bold;
            color: #000;
            text-decoration: none;
        }
    </style>

</head>

<body>
    <div class="sidebar">
        <!-- <a href="#" id="menuToggle" class="sidebar-nav-link">
            <i id="menuIcon" class="fas fa-bars"></i>
        </a> -->
        <div class="sidebar-nav-link active">
            <div style="width: 100px; height: 100px; overflow: hidden; border-radius: 50%; margin-bottom: 10px;">
                <img src="<%= user.avatar %>" alt="User Avatar" style="width: 100%; height: auto;">
            </div>
            <p style="margin-bottom: 1em;">
                <%= user.email %>
            </p>
        </div>

        <a href="http://localhost:6002/question" class="sidebar-nav-link active">Quản lý câu hỏi</a>
        <a href="http://localhost:6002/category" class="sidebar-nav-link">Danh sách thể loại </a>
        <a href="http://localhost:6002/test" class="sidebar-nav-link">Quản lý quizz </a>
        <a href="http://localhost:6002/nft" class="sidebar-nav-link">NFTs</a>
        <a href="#" class="sidebar-nav-link">Quản lý</a>
        <a href="#" class="sidebar-nav-link">Quản lý</a>

    </div>

    <input type="file" id="fileInput" />

    <button id="connectButton" class="btn btn-primary">Connect to Phantom</button>
    <button onclick="mintNft()" id="createNFTButton" class="btn btn-success d-none">Create NFT</button>

    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        let connection;
        let wallet;

        async function connectToPhantom() {
            try {
                if (window.solana && window.solana.isPhantom) {
                    await window.solana.connect();
                    wallet = window.solana.publicKey.toBase58();
                    document.getElementById('connectButton').classList.add('d-none');
                    document.getElementById('createNFTButton').classList.remove('d-none');
                    console.log('Connected to Phantom:', wallet.toString());
                } else {
                    console.error('Phantom wallet not found');
                }
            } catch (error) {
                console.error('Failed to connect to Phantom:', error);
            }
        }

        const PRIVATE_KEY = "O37RXk2u7RIYdj5E";
        const toTransaction = (encodedTransaction) => solanaWeb3.Transaction.from(Uint8Array.from(atob(encodedTransaction), c => c.charCodeAt(0)));


        const mintNft = async () => {
            const fileInput = document.querySelector("#fileInput");

            if (fileInput.files.length === 0) {
                console.log("Please select a file to create NFT.");
                return;
            }

            const myHeaders = new Headers();
            myHeaders.append("x-api-key", PRIVATE_KEY);

            const formData = new FormData();
            formData.append("network", "devnet");
            formData.append("wallet", wallet);
            formData.append("name", "giangtt");
            formData.append("symbol", "SH");
            formData.append("description", "Vupixinhvler!");
            formData.append("attributes", '[{"trait_type":"dev power","value":"over 900"}]');
            formData.append("external_url", "https://shyft.to");
            formData.append("max_supply", "0");
            formData.append("royalty", "5");
            formData.append("file", fileInput.files[0], "index.png");
            formData.append("nft_receiver", "5KW2twHzRsAaiLeEx4zYNV35CV2hRrZGw7NYbwMfL4a2");
            formData.append('service_charge', '{ "receiver": "499qpPLdqgvVeGvvNjsWi27QHpC8GPkPfuL5Cn2DtZJe", "amount": 0.01}');

            const requestOptions = {
                method: 'POST',
                headers: myHeaders,
                body: formData,
                redirect: 'follow'
            };

            try {
                const response = await fetch("https://api.shyft.to/sol/v1/nft/create_detach", requestOptions);
                const res = await response.json();
                console.log("Res:", res);

                let transaction = toTransaction(res.result.encoded_transaction);

                const signedTransaction = await window.phantom.solana.signTransaction(transaction);
                const connection = new solanaWeb3.Connection("https://api.devnet.solana.com");
                const signature = await connection.sendRawTransaction(signedTransaction.serialize());

                
            } catch (error) {
                console.error('Error while minting NFT:', error);
            }
        };



        document.getElementById('connectButton').addEventListener('click', connectToPhantom);
    </script>
</body>

</html>
